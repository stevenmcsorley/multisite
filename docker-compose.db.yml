version: "3.8"

services:
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - db-network
  harvest:
    build:
      context: ./site1/harvest
      dockerfile: Dockerfile.harvest
    container_name: harvest_app
    restart: always
    depends_on:
      - postgres
    environment:
      # Existing variables for DB
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${HARVEST_POSTGRES_DB}

      # Any existing API keys
      API_KEY_1: ${API_KEY_1}
      API_KEY_2: ${API_KEY_2}
      API_KEY_3: ${API_KEY_3}

      # Harvest environment variables for the blog script:
      API_KEY_BLOG: ${API_KEY_BLOG}
      CLOUDFLARE_ACCOUNT_ID: ${CLOUDFLARE_ACCOUNT_ID}
      CLOUDFLARE_API_TOKEN: ${CLOUDFLARE_API_TOKEN}
      FLUX_MODEL: ${FLUX_MODEL}
      MODEL_ID: ${MODEL_ID}
      POSTS_PER_DAY: ${POSTS_PER_DAY}
      POST_CREATION_INTERVAL: ${POST_CREATION_INTERVAL}
    volumes:
      - ./site1/public/images:/app/public/images
    networks:
      - db-network
  pgadmin:
    image: dpage/pgadmin4:6.21
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - db-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  db-network:
    external: true
